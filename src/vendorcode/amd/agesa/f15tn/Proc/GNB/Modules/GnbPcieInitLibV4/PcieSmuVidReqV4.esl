/**
 * @file
 *
 * ALIB PSPP Pcie Smu Lib V1
 *
 *
 *
 * @xrefitem bom "File Content Label" "Release Content"
 * @e project:     AGESA
 * @e sub-project: GNB
 * @e \$Revision: 63425 $   @e \$Date: 2011-12-22 11:24:10 -0600 (Thu, 22 Dec 2011) $
 *
 */
/*
*****************************************************************************
*
 * Copyright (c) 2008 - 2012, Advanced Micro Devices, Inc.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Advanced Micro Devices, Inc. nor the names of
 *       its contributors may be used to endorse or promote products derived
 *       from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL ADVANCED MICRO DEVICES, INC. BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
* ***************************************************************************
*
*/



  /*----------------------------------------------------------------------------------------*/
  /**
   *   Request VID
   *
   *  Arg0 - 1 - GEN1 2 - GEN2
   *  Arg1 - 0 = do not wait intil voltage is set
   *         1 = wait until voltage is set
   */
  Method (procPcieSetVoltage, 2, Serialized) {
    Store ("PcieSetVoltage Enter", Debug)
    // Get real vid by index
    if (LEqual (Arg0, DEF_LINK_SPEED_GEN1)) {
      Store (DeRefOf (Index (varSclkVid, varGen1Vid)), local3)
    } else {
      Store (DeRefOf (Index (varSclkVid, varGen2Vid)), local3)
    }

    // GMMx63C/GMMx640 -- CG_Reg = reg - 0x600
    // Store REQ in local2
    And (procIndirectRegisterRead (0x0, 0xB8, 0xE000203C), 0x4, Local2)
    // Store ACK in local1
    And (procIndirectRegisterRead (0x0, 0xB8, 0xE0002040), 0x1, Local1)
    // Compare REQ with ACK
    while (LNotEqual (ShiftLeft(Local1, 0x2), Local2)) {
      And (procIndirectRegisterRead (0x0, 0xB8, 0xE0002040), 0x1, Local1)
    }
    Store (procIndirectRegisterRead (0x0, 0xB8, 0xE000203C), Local1)
    //Enable voltage change
    if (LEqual (Arg0, DEF_LINK_SPEED_GEN1)) {
      And (Local1, 0xFFFFFFFD, Local1)
    } else {
      Or (Local1, 0x2, Local1)
    }
    procIndirectRegisterWrite (0x0, 0xB8, 0xE000203C, Local1)
    //Clear voltage index
    And (Local1, Not (ShiftLeft (0xFF, 8)), Local1)

    Store (Concatenate ("  Voltage Index:", ToHexString (local3), Local6), Debug)
    //Set new voltage index
    Or (Local1, ShiftLeft (local3, 8), Local1)
    //Togle request
    And (Not (Local1), 0x4, Local2)
    Or (And (Local1, Not (0x4)), Local2, Local1)
    procIndirectRegisterWrite (0x0, 0xB8, 0xE000203C, Local1)
    if (LNotEqual (Arg1, 0)) {
      while (LNotEqual (ShiftLeft(Local1, 0x2), Local2)) {
        And (procIndirectRegisterRead (0x0, 0xB8, 0xE0002040), 0x1, Local1)
      }
    }
    Store ("PcieSetVoltage Exit", Debug)
  }
